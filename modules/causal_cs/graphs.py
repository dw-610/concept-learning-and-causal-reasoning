"""
This module contains adjacency matrices corresponding to different DAGs. The
graphs were generated using the DirectLiNGAM method. Graphs were generated with
the script 3_3_causal_discovery.py.

Naming convention: <data>_<task>

Data options:
- sc: shapes and colors
- scy: shapes, colors, and symbols

Task options:
- shapes: shape classification
- colors: color classification
- isSpeedLimit: speed limit classification

Note: only some combinations of data, task, and method are available.
"""

# ------------------------------------------------------------------------------
# imports

import numpy as np

# ------------------------------------------------------------------------------

sc_shapes = {
    'adj_mat': np.array([
        [0, 0, 0, 0, 0, 1, 1, 1, 0],
        [0, 0, 0, 0, 0, 1, 0, 1, 1],
        [0, 1, 0, 0, 0, 1, 0, 1, 1],
        [1, 1, 0, 0, 0, 1, 0, 1, 1],
        [1, 1, 0, 0, 0, 1, 1, 1, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0]
    ]),
    'node_names': {
        0: 's0', 1: 's1', 2: 'c0', 3: 'c1', 4: 'c2',
        5: 'u0', 6: 'u1', 7: 'u2', 8: 'u3'
    }
}
"""
Graph found for the shapes task with shapes and color semantic data.
"""

# ------------------------------------------------------------------------------

sc_colors = {
    'adj_mat': np.array([
        [0, 0, 0, 0, 0, 1, 1, 1, 0],
        [0, 0, 0, 0, 0, 1, 1, 1, 0],
        [0, 0, 0, 0, 0, 0, 1, 1, 0],
        [1, 1, 0, 0, 0, 1, 0, 1, 1],
        [1, 0, 0, 0, 0, 1, 1, 0, 1],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0]
    ]),
    'node_names': {
        0: 's0', 1: 's1', 2: 'c0', 3: 'c1', 4: 'c2',
        5: 'u0', 6: 'u1', 7: 'u2', 8: 'u3'
    }
}
"""
Graph found for the colors task with shapes and color semantic data.
"""

# ------------------------------------------------------------------------------

scy_isSpeedLimit = {
    'adj_mat': np.array([
        [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1],
        [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    ]),
    'node_names': {
        0: 's0', 1: 's1', 2: 'c0', 3: 'c1', 4: 'c2',
        5: 'y0', 6: 'y1', 7: 'y2', 8: 'y3', 9: 'y4', 10: 'y5', 11: 'y6', 
        12: 'y7', 13: 'y8', 14: 'y9', 15: 'y10', 16: 'y11', 17: 'y12',
        18: 'y13', 19: 'y14',
        20: 'u'
    }
}
"""
Graph found for the isSpeedLimit task with shapes, colors, and symbols 
semantic data.
"""

# ------------------------------------------------------------------------------

graphs = {
    'sc_shapes': sc_shapes,
    'sc_colors': sc_colors,
    'scy_isSpeedLimit': scy_isSpeedLimit
}

# ------------------------------------------------------------------------------